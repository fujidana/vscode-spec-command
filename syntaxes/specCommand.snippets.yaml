macro-with-fixed-arguments:
  prefix:
    - def-macro-fixed
  body:
    - "\"\"\"Usage: `${1:macro_name} ${3:arg1 ...}`\"\"\""
    - "def ${1:macro_name} '{"
    - "\tif (\\$# != ${2:arg_num}) {"
    - "\t\teprintf(\"Usage: %s ${3:arg1 ...}\\n\", \"\\$0\")"
    - "\t\texit"
    - "\t}"
    - "\t$TM_SELECTED_TEXT$0"
    - "}'"
  description:
    traditional macro definition using fixed number of arguments
macro-with-variable-arguments:
  prefix:
    - def-macro-variable
  body:
    - "\"\"\"Usage: `${1:macro_name} ...`\"\"\""
    - "def ${1:macro_name} '{"
    - "\tlocal ${2:arg_num}, ${3:arg_array}[]"
    - "\t${2:arg_num} = split(\"$@\", ${3:arg_array}, \"\\a\")"
    - "\t$TM_SELECTED_TEXT$0"
    - "}'"
  description:
    traditional macro definition using variable number of arguments
macro-function:
  prefix:
    - def-func
  body:
    - "\"\"\"${3:comment}\"\"\""
    - "def ${1:func_name}(${2:arg1, ...}) '{"
    - "\t$TM_SELECTED_TEXT$0"
    - "\treturn 0"
    - "}'"
  description:
    macro function definition
macro-builtin:
  prefix:
    - cdef-builtin
  body:
    - "cdef(\"${1|begin_mac,end_mac,config_mac,prompt_mac,cleanup_once,cleanup_always|}\", ${2:string}, ${3:key})"
  description:
    built-in macro definition, which is invoked at the specified times only if defined
data-array:
  prefix:
    - array
  body:
    - "${1|local,global,shared|} ${2|float,double,string,byte,short,long,long64,ubyte,ushort,ulong,ulong64|} array ${3:array_name}[${4:cols}]"
  description:
    data array declaraion
if:
  prefix:
    - if
  body:
    - "if (${1:condition}) {"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    if statement
else:
  prefix:
    - else
  body:
    - "else {"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    else clause
else-if:
  prefix:
    - else-if
  body:
    - "else if (${1:condition}) {"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    else clause with a nested if statement
while:
  prefix:
    - while
  body:
    - "while (${1:condition}) {"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    while loop
for:
  prefix:
    - for
  body:
    - "local ${1:i}"
    - "for (${1:i} = 0; ${1:i} < ${2:n}; ${1:i}++) {"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    for loop
for-in:
  prefix:
    - for-in
  body:
    - "local ${1:key}, ${2:value}"
    - "for (${1:key} in ${3:assoc_array}) {"
    - "\t${2:value} = ${3:assoc_array}[${1:key}]"
    - "\t$TM_SELECTED_TEXT$0"
    - "}"
  description:
    for-in loop
